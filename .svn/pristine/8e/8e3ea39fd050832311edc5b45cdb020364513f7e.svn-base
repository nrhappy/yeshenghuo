package cn.xjwlfw.yeshenghuo.controller.business.functionManage;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.apache.shiro.SecurityUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.alibaba.fastjson.JSON;

import cn.xjwlfw.yeshenghuo.model.Dashang;
import cn.xjwlfw.yeshenghuo.model.OwnScreen;
import cn.xjwlfw.yeshenghuo.model.WeiShQContentShow;
import cn.xjwlfw.yeshenghuo.model.Weishangqiang;
import cn.xjwlfw.yeshenghuo.service.FileService;
import cn.xjwlfw.yeshenghuo.service.business.functionManage.FunctionService;
import cn.xjwlfw.yeshenghuo.system.base.BaseController;
import cn.xjwlfw.yeshenghuo.system.base.Result;

/**
 * 微上墙后台管理
 * 
 * @author lee
 *
 */
@Controller
@RequestMapping(value = "/business/functionManage/weishangqiangManage")
public class WeishangqiangManageController extends BaseController {
	
	Logger logger = Logger.getLogger(WeishangqiangManageController.class);
	
	@Autowired
	private FunctionService functionService;
	
	@Autowired
	private FileService fileService;
	
	/**
	 * 首页
	 * 
	 * @return
	 */
	@RequestMapping(value = "")
	public String index() {
		return "/business/functionManage/weishangqiangManage";
	}
	
	@ResponseBody
	@RequestMapping(value = "/homeData")
	public Result homeData() {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		return Result.success(functionService.getHomeData(mobile));
	}
	
	@ResponseBody
	@RequestMapping(value = "/openWShQ")
	public Result openWShQ(HttpServletRequest request) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		functionService.openWShQ(request, mobile);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/changeSetting", method = RequestMethod.POST)
	public Result changeSetting(@RequestBody Weishangqiang wei) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
//		Weishangqiang wei = new Weishangqiang();
//		wei.setPause(status);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/settingSwitch")
	public Result settingSwitch(@RequestParam("status") String status) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Weishangqiang wei = new Weishangqiang();
		wei.setPause(status);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/settingName")
	public Result settingName(@RequestParam("name") String name) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Weishangqiang wei = new Weishangqiang();
		wei.setName(name);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/settingAddress")
	public Result settingAddress(@RequestParam("address") String address) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Weishangqiang wei = new Weishangqiang();
		wei.setLocation(address);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/settingTitle")
	public Result settingTitle(@RequestParam("title") String title) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Weishangqiang wei = new Weishangqiang();
		wei.setTitle(title);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}

	@ResponseBody
	@RequestMapping(value = "/settingFontSize")
	public Result settingFontSize(@RequestParam("size") String size) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Weishangqiang wei = new Weishangqiang();
		wei.setFontSize(size);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/settingStopWords")
	public Result settingStopWords(@RequestParam("stopWords") String stopWords) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Weishangqiang wei = new Weishangqiang();
		wei.setStopWords(stopWords);
		functionService.changeSetting(mobile, wei);
		return Result.success();
	}
	
	@ResponseBody
	@RequestMapping(value = "/settingScreenFile")
	public Result settingScreenFile(@RequestParam(value = "file") MultipartFile file, HttpServletRequest request) {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		Result result = fileService.upload(file, request);
		Weishangqiang wei = new Weishangqiang();
		wei.setBgUrl((String) result.getData().get("fileUrl"));
		functionService.changeSetting(mobile, wei);
		Map<String, Object> map = new HashMap<>();
		map.put("bgUrl", result.getData().get("fileUrl"));
		return Result.success(map);
	}
	
	@RequestMapping(value = "/bigScreen")
	public String openBigScreen(Model model, int businessId) {
		return functionService.openBigScreen(model, businessId);
	}
	
	@RequestMapping(value = "/bigScreen/content")
	@ResponseBody
	public Result getContent(@RequestParam(value = "businessId") int businessId, @RequestParam(value = "lastTime") String lastTime) {
		return functionService.getContent(businessId, lastTime);
	}
	
	@RequestMapping(value = "/contentList")
	@ResponseBody
	public List<WeiShQContentShow> contentList() {
		String mobile = (String) SecurityUtils.getSubject().getPrincipal();
		return functionService.getContentList(mobile);
	}
	
	@RequestMapping(value = "/deleteContent")
	@ResponseBody
	public Result deleteContent(@RequestParam("list") String list) {
		functionService.deleteContent((List<String>) JSON.parse(list));
		return Result.success();
	}
	
	@RequestMapping(value = "/ownScreenList")
	@ResponseBody
	public Result ownScreenList() {
		return functionService.ownScreenList();
	}
	
	@RequestMapping(value = "/dashangList")
	@ResponseBody
	public Result dashangList() {
		return functionService.dashangList();
	}
	
	@RequestMapping(value = "/ownScreenSet")
	@ResponseBody
	public Result ownScreenSet(OwnScreen ownScreen) {
		return functionService.ownScreenSet(ownScreen);
	}
	
	@RequestMapping(value = "/dashangSet")
	@ResponseBody
	public Result dashangSet(Dashang dashang) {
		return functionService.dashangSet(dashang);
	}
}
